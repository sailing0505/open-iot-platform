<?xml version="1.0" encoding="UTF-8"?>

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.open.iot</groupId>
	<artifactId>open-iot</artifactId>
	<version>1.0.0</version>
	<name>${project.artifactId}</name>
	<packaging>pom</packaging>

	<properties>
		<spring-boot.version>2.1.6.RELEASE</spring-boot.version>
		<spring-cloud.version>Greenwich.RELEASE</spring-cloud.version>
		<spring-platform.version>Cairo-SR7</spring-platform.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<spring-boot-admin.version>2.1.4</spring-boot-admin.version>
		<hutool.version>4.5.10</hutool.version>
		<mybatis-plus.version>3.1.0</mybatis-plus.version>
		<kaptcha.version>0.0.9</kaptcha.version>
		<velocity.version>1.7</velocity.version>
		<jasypt.version>2.1.0</jasypt.version>
		<security.oauth.version>2.3.5.RELEASE</security.oauth.version>
		<security.oauth.auto.version>2.1.2.RELEASE</security.oauth.auto.version>
		<jackson.modules>2.9.8</jackson.modules>
		<!--zipkin2.12.x需要此版本jooq-->
		<jooq.version>3.11.9</jooq.version>
		<zipkin.version>2.12.2</zipkin.version>
		<zipkin-storage-mysql.version>2.8.4</zipkin-storage-mysql.version>
		<docker.url>http://192.168.0.104:4243</docker.url>
		<registry.url>192.168.0.104:5000</registry.url>
		
		<java.version>1.8</java.version>
		<sharding-jdbc>2.0.3</sharding-jdbc>
		<swagger.version>2.9.2</swagger.version>
		<swagger.m.version>1.0.6</swagger.m.version>
		<core.version>1.0.0</core.version>
		<disruptor.version>3.4.1</disruptor.version>
		<hibernate-validator.verion>5.0.2.Final</hibernate-validator.verion>
		<commons-collections4.version>4.1</commons-collections4.version>
		<fastjson.version>1.2.47</fastjson.version>
		<jasypt.version>1.14</jasypt.version>
		<txlcn.version>5.0.2.RELEASE</txlcn.version>
		<net-devh-grpc.version>2.0.1.RELEASE</net-devh-grpc.version>
	</properties>

	<dependencies>
		<!--eureka 客户端-->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<!--配置文件处理器-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.github.ulisesbocchio</groupId>
			<artifactId>jasypt-spring-boot-starter</artifactId>
			<version>${jasypt.version}</version>
		</dependency>
		<!--监控-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!--监控客户端-->
		<dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-starter-client</artifactId>
			<version>${spring-boot-admin.version}</version>
		</dependency>
		<!--服务链路追踪-->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-sleuth</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-sleuth-zipkin</artifactId>
		</dependency>
		<!--断路器依赖-->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
		</dependency>
		<!--Lombok-->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
		<!--commons包-->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>${commons-collections4.version}</version>
		</dependency>
		<!--fastjson-->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>${fastjson.version}</version>
		</dependency>
		<!-- Micrometer Prometheus registry -->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<!--测试依赖-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<modules>
		<!-- 内部工具组件 -->
		<module>open-framework</module>
		<!-- 注册中心 -->
		<module>register</module>
		<!-- 认证中心 -->
		<module>oauth</module>
		<!-- 业务中心 -->
		<module>open-platform</module>
		<!-- spring cloud gateway -->
		<module>gateway</module>	
	</modules>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>io.spring.platform</groupId>
				<artifactId>platform-bom</artifactId>
				<version>${spring-platform.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!--稳定版本，替代spring security bom内置-->
			<dependency>
				<groupId>org.springframework.security.oauth</groupId>
				<artifactId>spring-security-oauth2</artifactId>
				<version>${security.oauth.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security.oauth.boot</groupId>
				<artifactId>spring-security-oauth2-autoconfigure</artifactId>
				<version>${security.oauth.auto.version}</version>
			</dependency>
			<!--jackson模块-->
			<dependency>
				<groupId>com.fasterxml.jackson.module</groupId>
				<artifactId>jackson-modules-java8</artifactId>
				<version>${jackson.modules}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			
			<dependency>
                <groupId>com.codingapi.txlcn</groupId>
                <artifactId>txlcn-tm</artifactId>
                <version>${txlcn.version}</version>
            </dependency>
            <dependency>
                <groupId>com.codingapi.txlcn</groupId>
                <artifactId>txlcn-tc</artifactId>
                <version>${txlcn.version}</version>
            </dependency>
            <dependency>
                <groupId>com.codingapi.txlcn</groupId>
                <artifactId>txlcn-txmsg-netty</artifactId>
                <version>${txlcn.version}</version>
            </dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<finalName>${project.name}</finalName>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<target>${java.version}</target>
						<source>${java.version}</source>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<configuration>
						<archive>
							<addMavenDescriptor>false</addMavenDescriptor>
						</archive>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.yml</include>
					<include>**/*.xml</include>
				</includes>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
					<include>**/*.tld</include>
				</includes>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src/main/view</directory>
				<includes>
					<include>**/*.*</include>
				</includes>
				<filtering>false</filtering>
			</resource>
		</resources>
	</build>

</project>
